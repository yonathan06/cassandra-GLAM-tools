{{#> mainWrapper}}
	<link rel="stylesheet"
		href="https://tools-static.wmflabs.org/cdnjs/ajax/libs/twitter-bootstrap/4.0.0/css/bootstrap.min.css" />
	<div class="pusher">
		{{>sidebar}}
		<section id="admin-cover" class="cover">
			<div class="row">
				<div class="col-12">
					<h2>Create a new GLAM</h2>
				</div>
			</div>
		</section>
		<!-- Main Content -->
		<main id="main-container">
			<section>
				<div class="row">
					<div class="col-12 col-xl-9 my-xl-5">
						<div id="wrong-glam" class="error-message mb-4" style="display:none;">
							<h3>OOPS! Something went wrong. Check the following things:</h3>
							<ul>
								<li><b>Category</b> might be in use</li>
								<li><b>Image URL</b> must be a valid URL (starts with <i>http://</i> or <i>https://</i>)</li>
							</ul>
						</div>
						<div id="success-glam" class="mb-4" style="display:none;">
							<div class="success-message mb-5">
								<h3>New glam added correctly</h3>
							</div>
							<div class="text-center">
								<a href="/admin/panel">VIEW COMPLETE LIST</a>
							</div>
						</div>
						<form id="new-glam-form" name="new-glam" autocomplete="off">
							<div id="allGlams">
							</div>
							<button type="button" id="addAnotherGlam" class="btn btn-secondary btn-block">Add another glam</button>
							<button type="submit" class="btn btn-primary btn-block">CREATE</button>
						</form>
					</div>
				</div>
			</section>
		</main>
	</div>
	<script>
		const countries = {{ json countries }};
		(() => {
			const form = document.getElementById('new-glam-form');
			const addAnotherGlamButton = document.getElementById('addAnotherGlam');

			const successMessage = document.getElementById('success-glam');
			const errorMessage = document.getElementById('wrong-glam');

			function appendNewGlamToForm(number) {
				const div = document.createElement('div');
				div.setAttribute('data-holder', 'glam');
				div.classList.add('mb-5');
				div.innerHTML = `
					<div class="form-group">
						<label for="glamFullName-${number}">Full Name*</label>
						<input type="text" name="fullname" class="form-control" id="glamFullName-${number}"
							placeholder="e.g. Canton of Zürich, ETH Library of Zurich or Swiss National Library" required />
					</div>
					<div class="form-group">
						<label for="glamCategory-${number}">Category*</label>
						<input type="text" name="category" class="form-control" id="glamCategory-${number}"
							placeholder="e.g. Historical images of buildings in the canton of Zürich" required />
					</div>
					<div class="form-group">
						<label for="featuredImageURL-${number}">Featured image URL*</label>
						<input type="text" name="image" class="form-control" id="featuredImageURL-${number}" placeholder="URL"
							required autocomplete="off" />
					</div>
					<div class="form-group">
						<label for="websiteURL-${number}">Website URL</label>
						<input type="text" name="website" class="form-control" id="websiteURL-${number}" placeholder="URL"
							required />
					</div>
					<div class="form-group">
						<label for="country-${number}">Country</label>
						<select name="country" class="form-control" id="country-${number}" required>
							<option value="">Select country</option>
							${countries.map(country => `<option value="${country}">${country}</option>`).join('')}
						</select>
					</div>
				`;
				form.querySelector('#allGlams').appendChild(div);
			}

			let glamsCount = 1;
			appendNewGlamToForm(glamsCount);
			addAnotherGlamButton.addEventListener('click', () => {
				glamsCount++;
				appendNewGlamToForm(glamsCount);
			})

			async function createGlams(data) {
				errorMessage.style.display = 'none';
				const response = await fetch(`/api/admin/glams`, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({ glams: data })
				});
				if (response.ok) {
					form.style.display = 'none';
					successMessage.style.display = 'block';
				} else {
					errorMessage.style.display = 'block';
				}
			}

			form.addEventListener('submit', event => {
				event.preventDefault();
				const glamsHolders = form.querySelectorAll('[data-holder="glam"]');
				const glamsInputs = Array.prototype.map.call(glamsHolders, (element, index) => {
					return {
						fullname: element.querySelector('[name="fullname"]').value,
						category: element.querySelector('[name="category"]').value,
						image: element.querySelector('[name="image"]').value,
						website: element.querySelector('[name="website"]').value,
						country: element.querySelector('[name="country"]').value,
					}
				});
				createGlams(glamsInputs);
			})
		})();
	</script>
{{/mainWrapper}}
